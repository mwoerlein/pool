/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace my::core;


class Object {
    
    // constants
    // TODO: remove with working ClassHeader "struct"
    int ch_inst_handle := 4;
    
    // variables
    Runtime runtime;
    
    // methods
    [Class] getClass() {
        Class cl = null;
        __pasm__(<"
             movl 4(%eax), %eax     // @this
             movl (%eax), %eax      // @class desc
             movl _my_core_Object_coi_ch_inst_handle(%eax), %eax // @class handle
         ">, {"%eax": this} , {"%eax": cl});
        return cl;
    }
    
    [int] hash() {
        int hash = 0;
        __pasm__(<"
             movl 4(%eax), %eax     // @this
         ">, {"%eax": this} , {"%eax": hash});
        return hash;
    }
    
    // TODO: use generic method instead of plain Object?
    [int] equals(__any__ obj) {
        int eq = 0;
        __pasm__(<"
            movl 4(%eax), %eax  // @this
            cmpl %eax, 4(%ebx)  // @obj
            jne _come_ret
            movl 1, %ecx        // return true
            _come_ret:
        ">, {"%eax": this, "%ebx": obj, "%ecx": eq}, {"%ecx": eq});
        return eq;
    }
    
    [OStream] printToStream(OStream stream) {
        int addr = 0;
        __pasm__("movl 4(%eax), %eax     // @this", {"%eax": this} , {"%eax": addr});
        return stream.printCString(this.getClass().getName()).printChar('@').printPtr(addr);
    }
    
    [Runtime] rt() {
        return runtime;
    }
    
    // TODO #7: move to constructor?
    [] setRt(Runtime rt) {
        runtime = rt;
        return;
    }
    
}
