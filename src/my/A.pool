/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace my;

use my::core::Object;
use my::core::Runtime;

class A extends Object {
    
    // variables
    int column;
    int row;
    
    // methods
    // TODO: move to constructor
    <> init(int row, int column) {
        this.row = row;         // assignment
        this.column = column;   // assignment
        return;
    }
    
    <int> getRow() {
        return row;
    }
    
    <int, int> getRowAndColumn() {
        return <row, column>;
    }
    
    <> test(int row) {
        // TODO: #3 use constant Runtime.out
        int _out := 0;              // fixed variable
        Runtime rt := this.rt();    // fixed variable
        my::core::Class c = this.getClass();  // modifiable variable
        c = c.getClass();           // assignment
        rt.printString(c.getName(), _out);
        rt.printChar(' ', _out);
        rt.printInt(this.column, _out);
        rt.printChar(' ', _out);
        rt.printInt(row, _out);
        rt.printChar(' ', _out);
        <int _row2, int _col2> := this.getRowAndColumn();   // fixed variables
        {
            <int _row, int _col> = this.getRowAndColumn();  // modifiable variables
            rt.printInt(_row, _out);
            rt.printChar(' ', _out);
            rt.printInt(_col, _out);
        }
        // TODO: #3 use constant Runtime.err
        rt.printString(" compile test\n", 1);
        return;
    }
    
}
