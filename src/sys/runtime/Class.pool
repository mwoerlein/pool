/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace sys::runtime;

use sys::core::Object;
use sys::core::String;

class Class extends Object {
    
    // variables
    ClassDescriptor desc;
    String name;
    
    // methods
    [String] getName() {
        if (!name) {
            name = this.rt().createInstance(String:CLASSNAME);
            cstring _name = "";
            __pasm__("addl %ebx, %eax", {"%eax": desc, "%ebx": desc.classname_offset}, {"%eax": _name});
            name.assignCString(_name);
        }
        return name;
    }
    
    [ClassDescriptor] getDesc() {
        return desc;
    }
    
    // TODO: move to constructor?
    [] setDesc(ClassDescriptor desc) {
        this.desc = desc;
        desc.class_instance = this; 
    }
    
    // TODO: move to destructor with implicit destruction instead of manual one
    [] __destruct() {
        if (name) { name.destroy(); }
    }
    
    global [ClassDescriptor] _getClassDesc() {
        ClassDescriptor desc = null;
        __pasm__("movl 8(%ebp), %eax", {}, {"%eax": desc});
        return desc;
    } 
    
}
