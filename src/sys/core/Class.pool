/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace sys::core;


class Class extends Object {
    
    // constants
    // TODO: remove with working ClassHeader "struct"
    int ch_inst_handle := 4;
    int ch_name := 8;
    
    // variables
    // TODO: replace int with working ClassHeader "struct"
    int desc;
    String name;
    
    // methods
    [String] getName() {
        return name;
    }
    
    // TODO: replace int with working ClassHeader "struct"
    [int] getDesc() {
        return desc;
    }
    
    // TODO: move to constructor?
    // TODO: replace int with working ClassHeader "struct"
    [] setDesc(int desc) {
        this.desc = desc;
        // desc.inst_handle = this; 
        __pasm__("movl %eax, _sys_core_Class_coi_ch_inst_handle(%ebx)", {"%eax": this, "%ebx": desc});
        
        name = this.rt().createInstance(String:CLASSNAME);
        // name.assignCString(desc.name);
        cstring _name = "";
        __pasm__("addl _sys_core_Class_coi_ch_name(%eax), %eax", {"%eax": desc}, {"%eax": _name});
        name.assignCString(_name);
    }
    
    // TODO: move to destructor with implicit destruction instead of manual one
    [] __destruct() {
        name.destroy();
    }
    
    global [int] _getClassDesc() {
        int desc = 0;
        __pasm__("movl 8(%ebp), %eax", {}, {"%eax": desc});
        return desc;
    } 
    
}
