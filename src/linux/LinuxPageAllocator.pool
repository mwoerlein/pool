/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace linux;

use sys::memory::Address;
use sys::memory::MemoryInfo;
use sys::memory::PageAllocator;

class LinuxPageAllocator extends PageAllocator {
    
    [int] isIncreasing() { return 0; }
    
    [MemoryInfo] allocatePages(int pages) {
        [int start, int size] = LinuxPageAllocator:_pageAlloc(pages);
        MemoryInfo info = Address:cast(start);
        info.buf = start;
        info.len = size;
        info.flags = MemoryInfo:FLAGS_AVAILABLE;
        info.next = info.prev = info;
        return info;
    }
    
    global [int, int] _pageAlloc(int pages) {
        int size = pages * PageAllocator:PAGESIZE;
        int start = 0;
        __pasm__(<"
            pushl 0     // offset
            pushl -1    // fd
            pushl 34    // flags
            pushl 3     // prot
            pushl %eax  // len
            pushl 0     // addr
            movl 90, %eax
            movl %esp, %ebx
            int 0x80 
            addl 24, %esp
        ">, {"%eax": size}, {"%eax": start});
        return [start, size];
    }
    
}
