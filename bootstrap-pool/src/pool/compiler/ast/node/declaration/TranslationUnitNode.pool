/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace pool::compiler::ast::node::declaration;

use pool::compiler::ast::Node;
use pool::compiler::ast::Visitor;
use pool::compiler::ast::node::NodeList;

use sys::stream::OStream;

class TranslationUnitNode extends Node {

    NamespaceDeclNode _ns;
    NodeList _uses; //NodeList<UseStatementNode>
    NodeList _classes; //NodeList<ClassDeclNode>
    NodeList _structs; //NodeList<StructDeclNode>
    
    [] __init() {
        _uses = this.createOwn(NodeList:CLASSNAME);
        _classes = this.createOwn(NodeList:CLASSNAME);
        _structs = this.createOwn(NodeList:CLASSNAME);
    }
    
    [TranslationUnitNode] setNamespace(NamespaceDeclNode ns) { _ns = ns; return this; }
    [NamespaceDeclNode] getNamespace() { return _ns; }
    
    [TranslationUnitNode] addUseStatement(UseStatementNode useStmt) { _uses.add(_uses.own(useStmt)); return this; }
    [NodeList] getUses() { return _uses; }
    
    [TranslationUnitNode] addClassDecl(ClassDeclNode decl) { _classes.add(_classes.own(decl)); return this; }
    [NodeList] getClasses() { return _classes; }
    
    [TranslationUnitNode] addStructDecl(StructDeclNode decl) { _structs.add(_structs.own(decl)); return this; }
    [NodeList] getStructs() { return _structs; }

    // NODE
    [int] accept(Visitor visitor) { return visitor.visitTranslationUnit(this); }
    [OStream] printDebugName(OStream stream) {
        return stream.printCString("unit-<").printCString("NAME").printChar('>');
    }
}
