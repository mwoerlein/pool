/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace pool::compiler::ast::node::declaration;

use pool::compiler::ast::Node;
use pool::compiler::ast::Scope;
use pool::compiler::ast::Visitor;
use pool::compiler::ast::node::NodeList;
use pool::compiler::ast::scope::UnitScope;

use sys::core::String;
use sys::store::StorageElement;
use sys::stream::OStream;

class TranslationUnitNode extends Node {

    UnitScope _scope;
    
    StorageElement _element;
    String _name;

    NamespaceDeclNode _ns;
    NodeList _uses; //NodeList<UseStatementNode>
    NodeList _classes; //NodeList<ClassDeclNode>
    NodeList _structs; //NodeList<StructDeclNode>
    
    [] __init() {
        _uses = this.createOwn(NodeList:CLASSNAME);
        _classes = this.createOwn(NodeList:CLASSNAME);
        _structs = this.createOwn(NodeList:CLASSNAME);
        _name = this.createOwn(String:CLASSNAME);
        _name.assignCString("UNKNOWN");
    }
    
    [TranslationUnitNode] init(StorageElement src, String fqn) {
        _element = this.own(src);
        _name.assignString(fqn);
        return this;
    }
    
    [TranslationUnitNode] setUnitScope(UnitScope scope) { _scope = scope; return this; }
    [UnitScope] getUnitScope() { return _scope; }
    [Scope] getScope() { if (_scope) { return _scope.scope(); } return null; }
    
    [StorageElement] getElement() { return _element; }
    [String] getName() { return _name; }
    
    [TranslationUnitNode] setNamespace(NamespaceDeclNode ns) { _ns = this.own(ns); return this; }
    [NamespaceDeclNode] getNamespace() { return _ns; }
    
    [TranslationUnitNode] addUseStatement(UseStatementNode useStmt) { _uses.add(_uses.own(useStmt)); return this; }
    [NodeList] getUses() { return _uses; }
    
    [TranslationUnitNode] addClassDecl(ClassDeclNode decl) { _classes.add(_classes.own(decl)); return this; }
    [NodeList] getClasses() { return _classes; }
    
    [TranslationUnitNode] addStructDecl(StructDeclNode decl) { _structs.add(_structs.own(decl)); return this; }
    [NodeList] getStructs() { return _structs; }

    // NODE
    [int] accept(Visitor visitor) { return visitor.visitTranslationUnit(this); }
    [OStream] printDebugName(OStream stream) {
        return stream.printCString("unit-<").print(_name).printChar('>');
    }
}
