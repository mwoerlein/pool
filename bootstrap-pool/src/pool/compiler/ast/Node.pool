/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace pool::compiler::ast;

use sys::stream::OStream;

class Node extends sys::core::Object {

    int firstLine;
    int firstColumn;
    int lastLine;
    int lastColumn;
    
    abstract [int] accept(Visitor visitor);
    
    abstract [OStream] printDebugName(OStream stream);

    [Node] setLocation(int firstLine, int firstColumn, int lastLine, int lastColumn) {
        this.firstLine = firstLine;
        this.firstColumn = firstColumn;
        this.lastLine = lastLine;
        this.lastColumn = lastColumn;
        return this;
    }
    [Node] setFirstLocation(int firstLine, int firstColumn) {
        this.firstLine = firstLine;
        this.firstColumn = firstColumn;
        return this;
    }
    [Node] setLastLocation(int lastLine, int lastColumn) {
        this.lastLine = lastLine;
        this.lastColumn = lastColumn;
        return this;
    }
    [int] getFirstLine() { return firstLine; }
    [int] getFirstColumn() { return firstColumn; }
    [int] getLastLine() { return lastLine; }
    [int] getLastColumn() { return lastColumn; }
    
    [Scope] getScope() { return null; }
    
    [OStream] printToStream(OStream stream) {
        return this.printDebugName(stream);
    }
    
    [OStream] debugToStream(OStream stream) {
        return this.debugLocationToStream(this.printDebugName(stream));
    }
    
    [OStream] debugLocationToStream(OStream stream) {
        return stream
            .printChar('(')
            .printInt(firstLine).printChar('/').printInt(firstColumn)
            .printChar('-')
            .printInt(lastLine).printChar('/').printInt(lastColumn)
            .printChar(')');
    }
    
    // TODO: remove with implicit cast
    [Node] node() { return this; }
}
