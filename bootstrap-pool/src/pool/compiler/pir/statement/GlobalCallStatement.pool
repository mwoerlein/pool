/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace pool::compiler::pir::statement;

use pool::compiler::ast::scope::MethodScope;
use pool::compiler::pir::Location;

use sys::core::anycollection::AnyIterator;
use sys::core::anycollection::AnyList;
use sys::stream::OStream;

class GlobalCallStatement extends Statement {

    MethodScope _method;
    AnyList _params;
    AnyList _rets;

    [GlobalCallStatement] init(MethodScope method, AnyList params, AnyList rets) {
        _method = method; _params = this.own(params); _rets = this.own(rets);
        return this;
    }
    [MethodScope] getMethod() { return _method; }
    [AnyList] getParams() { return _params; }
    [AnyList] getRets() { return _rets; }
    
    [OStream] printToStream(OStream stream) {
        stream.printCString("GLOBALCALL(")
            .print(_method.getClassDeclNode().getClassScope().getFullQualifiedName()).printCString(", '")
            .print(_method.getMethodDeclNode().getName())
            .printCString("', [");
        {
            AnyIterator it = _params.iterator();
            while (it.hasNext()) {
                stream.print(it.next());
                if (it.hasNext()) { stream.printChar(',').printChar(' '); }
            }
            it.destroy();
        }
        stream.printCString("], [");
        {
            AnyIterator it = _rets.iterator();
            while (it.hasNext()) {
                stream.print(it.next());
                if (it.hasNext()) { stream.printChar(',').printChar(' '); }
            }
            it.destroy();
        }
        return stream.printCString("])");
    }
    
    [] accept(Visitor visitor) { visitor.visitGlobalCall(this); }
    
}
