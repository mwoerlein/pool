/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace pool::storage;

use sys::core::String;
use sys::core::utils::PropertyContainer;

class Mimetype {
    
    cstring PROPERTY := "meta.mimetype";
    
    int UNKNOWN := 0;
    int POOL_SRC := 1;
    int POOL_ASM := 2;
    int POOL_GRAMMAR := 3;
    int POOL_X86_CLASS := 4;
    int GRID_STORE := 5;
    
    cstring TYPE_UNKNOWN        := "application/octet-stream";
    
    cstring TYPE_POOL_SRC       := "text/x-pool-src";
    cstring TYPE_POOL_ASM       := "text/x-pool-asm";
    cstring TYPE_POOL_GRAMMAR   := "text/x-pool-grammar";
    
    cstring TYPE_BIN_X86        := "application/x-bin-x86";
    cstring TYPE_GRID_STORE     := "application/x-grid-store";
    
    global [int] fromTypeString(String mimetype) {
        if (mimetype.cequals(Mimetype:TYPE_POOL_SRC)) { return Mimetype:POOL_SRC; }
        if (mimetype.cequals(Mimetype:TYPE_POOL_ASM)) { return Mimetype:POOL_ASM; }
        if (mimetype.cequals(Mimetype:TYPE_POOL_GRAMMAR)) { return Mimetype:POOL_GRAMMAR; }
        if (mimetype.cequals(Mimetype:TYPE_GRID_STORE)) { return Mimetype:GRID_STORE; }
        return Mimetype:UNKNOWN;
    }
    
    global [int] fromProperties(PropertyContainer p) {
        if (!p.hasCStringProperty(Mimetype:PROPERTY)) { return Mimetype:UNKNOWN; }
        String mimetypeString = p.getCStringProperty(Mimetype:PROPERTY);
        int mimetype = Mimetype:fromTypeString(mimetypeString);
        if (mimetype == Mimetype:UNKNOWN) {
            if (mimetypeString.cequals(Mimetype:TYPE_BIN_X86) && p.isCStringProperty("pool.class", "true")) {
                return Mimetype:POOL_X86_CLASS;
            }
        }
        return mimetype;
    }
    
    global [cstring] toTypeCString(int id) {
        if (id == Mimetype:POOL_SRC) { return Mimetype:TYPE_POOL_SRC; }
        if (id == Mimetype:POOL_ASM) { return Mimetype:TYPE_POOL_ASM; }
        if (id == Mimetype:POOL_GRAMMAR) { return Mimetype:TYPE_POOL_GRAMMAR; }
        if (id == Mimetype:POOL_X86_CLASS) { return Mimetype:TYPE_BIN_X86; }
        if (id == Mimetype:GRID_STORE) { return Mimetype:TYPE_GRID_STORE; }
        return Mimetype:TYPE_UNKNOWN;
    }

}
