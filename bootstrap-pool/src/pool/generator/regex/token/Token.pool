/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace pool::generator::regex::token;


class Token extends pool::generator::tokenizer::Token {

    int CHAR      :=  0;
    int OBRACKET  :=  1;
    int CBRACKET  :=  2;
    int OSBRACKET :=  3;
    int CSBRACKET :=  4;
    int QMARK     :=  5;
    int STAR      :=  6;
    int PLUS      :=  7;
    int MINUS     :=  8;
    int CFLEX     :=  9;
    int PIPE      := 10;
    int DOT       := 11;
    int OTHER     := 12;
    
    [] debugType(sys::stream::OStream stream) {
        if (type == Token:EOI) { stream.printCString("EOI"); }
        else if (type == Token:CHAR) { stream.printCString("CHAR"); }
        else if (type == Token:OBRACKET) { stream.printCString("OBRACKET"); }
        else if (type == Token:CBRACKET) { stream.printCString("CBRACKET"); }
        else if (type == Token:OSBRACKET) { stream.printCString("OSBRACKET"); }
        else if (type == Token:CSBRACKET) { stream.printCString("CSBRACKET"); }
        else if (type == Token:QMARK) { stream.printCString("QMARK"); }
        else if (type == Token:STAR) { stream.printCString("STAR"); }
        else if (type == Token:PLUS) { stream.printCString("PLUS"); }
        else if (type == Token:MINUS) { stream.printCString("MINUS"); }
        else if (type == Token:CFLEX) { stream.printCString("CFLEX"); }
        else if (type == Token:PIPE) { stream.printCString("PIPE"); }
        else if (type == Token:DOT) { stream.printCString("DOT"); }
        else if (type == Token:OTHER) { stream.printCString("OTHER"); }
    }
}
