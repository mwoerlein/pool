/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace pool::generator::tokenizer::dfa;

use pool::generator::regex::node::CharSet; //TODO: extract and use generic CharSet outside of regex node model

use sys::core::anycollection::AnyIterator;
use sys::core::anycollection::AnyMapEntry;
use sys::core::anycollection::AnyMapEntryIterator;

class ActionIterator extends AnyIterator {

    AnyMapEntryIterator _inner;
    
    [] __destruct() {
        if (_inner) { _inner.destroy(); }
    }
    [ActionIterator] init(AnyMapEntryIterator inner) { this._inner = inner; return this; }
    
    [int] hasNext() { return _inner && _inner.hasNext(); }
    
    [CharSet, Action] next() {
        if (this.hasNext()) {
            AnyMapEntry entry = _inner.next();
            return [entry.getKey(), entry.getValue()];
        }
        return [null, null];
    }
}
