/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace pool::generator::tokenizer::dfa;

use pool::generator::regex::node::CharSet; // TODO: extract and use generic CharSet outside of regex node model

use sys::core::anycollection::AnyIterator;
use sys::core::anycollection::AnyMap;
use sys::core::anycollection::AnyMapEntryIterator;

class State extends sys::core::Object {

    int id;
    AnyMap actions; // HashMap<CharSet, Action>
    Action terminal;

    [] __init() {
        actions = this.createOwn(AnyMap:CLASSNAME);
        actions.init(13);
    }
    
    [State] setId(int id) { this.id = id; return this; }
    [int] getId() { return id; }
    
    [State] addAction(CharSet cs, Action a) { actions.set(cs, a); return this; }
    [AnyMapEntryIterator] actions() { return actions.entries(); }
    
    [State] addTerminalAction(Action a) { terminal = a; return this; }
    [Action] getTerminalAction() { return terminal; } 
    
}
