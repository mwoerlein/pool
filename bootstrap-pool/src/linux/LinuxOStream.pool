/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace linux;

use sys::stream::OStream;
use sys::stream::FOStream;

class LinuxOStream extends FOStream {
    
    int stream;
    
    [OStream] initOStream(int stream) {
        this.stream = stream;
        return this.ostream();
    }
    
    [OStream] printChar(int c) { 
        if (c == '\n') {
            SysCall:writeChar(stream, c);
        } else {
            this.printFChar(c, fg, bg);
        }
        return this.ostream();
    }
    
    [FOStream] printFChar(int c, int fg, int bg) {
        if (fg == FOStream:DEFAULT && bg == FOStream:DEFAULT) {
            SysCall:writeChar(stream, c);
        } else {
            LinuxScreen:_writeFormat(stream, fg, bg);
            SysCall:writeChar(stream, c);
            LinuxScreen:_resetFormat(stream);
        }
        
        return this.fostream();
    }
    
    [FOStream] printFBoxChar(int bc, int fg, int bg) {
        int bcode = LinuxScreen:_getBoxCode(bc);
        if (fg == FOStream:DEFAULT && bg == FOStream:DEFAULT) {
            SysCall:writeChar(stream, 0xE2);
            SysCall:writeChar(stream, bcode/256);
            SysCall:writeChar(stream, bcode);
        } else {
            LinuxScreen:_writeFormat(stream, fg, bg);
            SysCall:writeChar(stream, 0xE2);
            SysCall:writeChar(stream, bcode/256);
            SysCall:writeChar(stream, bcode);
            LinuxScreen:_resetFormat(stream);
        }
        
        return this.fostream();
    }
}
