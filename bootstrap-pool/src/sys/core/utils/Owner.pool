/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace sys::core::utils;

use sys::core::Object;
use sys::core::String;
use sys::core::anycollection::AnyList;
use sys::core::anycollection::AnyIterator;

// TODO: implement ownership correctly
class Owner extends Object {

    AnyList _owned;  // LinkedList<Object>

    [] __init() { this._initOwner(); }
    [] _initOwner() {
        _owned = this.rt().createInstance(AnyList:CLASSNAME);
    }
    
    [] __destruct() { this._destructOwner(); }
    [] _destructOwner() {
        _owned.destroyAll();
        _owned.destroy();
    }
    
    [__all__] createOwn(cstring name) {
        __all__ o = this.rt().createInstance(name);
        _owned.add(o);
        return o;
    }
    
    [String] createOwnStringFromString(String value) {
        String s = this.createOwn(String:CLASSNAME);
        s.assignString(value);
        return s;
    }
    
    [String] createOwnStringFromCString(cstring value) {
        String s = this.createOwn(String:CLASSNAME);
        s.assignCString(value);
        return s;
    }

    [String] createOwnStringFromChar(int value) {
        String s = this.createOwn(String:CLASSNAME);
        s.printChar(value);
        return s;
    }

    [String] createStringFromString(String value) {
        String s = this.rt().createInstance(String:CLASSNAME);
        s.assignString(value);
        return s;
    }
    
    [String] createStringFromCString(cstring value) {
        String s = this.rt().createInstance(String:CLASSNAME);
        s.assignCString(value);
        return s;
    }
}
