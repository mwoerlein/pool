/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace sys::core::utils;

use sys::core::Float;
use sys::core::Object;
use sys::core::String;
use sys::core::anycollection::AnyList;
use sys::core::anycollection::AnyIterator;

// TODO: implement ownership correctly
class Owner extends Object {

    [String] createOwnString(__any__ obj) {
        if (!obj) { return null; }
        String s = this.createOwn(String:CLASSNAME);
        s.print(obj);
        return s;
    }
    
    [String] createOwnStringFromCString(cstring value) {
        String s = this.createOwn(String:CLASSNAME);
        s.assignCString(value);
        return s;
    }

    [String] createOwnStringFromChar(int value) {
        String s = this.createOwn(String:CLASSNAME);
        s.printChar(value);
        return s;
    }
    
    [String] createOwnStringFromFlt(int value) {
        String s = this.createOwn(String:CLASSNAME);
        s.printFlt(value);
        return s;
    }

    [String] createString(__any__ obj) {
        if (!obj) { return null; }
        String s = this.rt().createInstance(String:CLASSNAME);
        s.print(obj);
        return s;
    }
    
    [String] createStringFromCString(cstring value) {
        String s = this.rt().createInstance(String:CLASSNAME);
        s.assignCString(value);
        return s;
    }
    
    [Float] createOwnFloatFromCString(cstring value) {
        Float f = this.createOwn(Float:CLASSNAME);
        f.fromCString(value);
        return f;
    }
    
    [Float] createOwnFloatFromFlt(int value) {
        Float f = this.createOwn(Float:CLASSNAME);
        f.assignFlt(value);
        return f;
    }
}
