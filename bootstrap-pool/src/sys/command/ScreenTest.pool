/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace sys::command;

use sys::stream::FOStream;

class ScreenTest extends linux::Command {

    [] configure() {
        this.setName("screentest")
            .setVersion("0.1.0")
            .setUsage(<"
Test for some screen features.

    Usage:
      screentest [options]

    Options:
      -h --help                     Show this screen.
      --version                     Show version.
">);
        this.registerOptionAlias('h', "help")
        ;
    }

    [int] run() {
        sys::stream::OStream out = this.rt().out();
        if (this.hasOption("help")) {
            out.printCString(usage).printNewline();
            return 0;
        }
        
        linux::LinuxScreen ls = this.initScreen();
        sys::tui::WindowManager wm = this.createOwn(sys::tui::WindowManager:CLASSNAME);
        int fg = FOStream:BRIGHT_YELLOW;
        int bg = FOStream:BLUE;
//        int fg = FOStream:RED;
//        int bg = FOStream:WHITE;
        
        int x1 = (ls.getMaxX() / 2) - 1;
        int x2 = ls.getMaxX() - x1 - 3;
        int y2 = ls.getMaxY() / 5;
        int y1 = ls.getMaxY() - y2 - 3;
        
        wm._init(ls.screen()).draw3TiledFrame(x1, x2, y1, y2);
        
        sys::tui::VirtualSubScreen vs1 = ls.createOwn(sys::tui::VirtualSubScreen:CLASSNAME);
        vs1._initVirtualSubScreen(x1, y1, ls.screen(), 1, 1);
        vs1.clearF(fg, bg);
        
        FOStream fout = vs1.createFOStream(fg, bg);
        this.rt().sleep(1, 0);
        fout.printChar('$').printInt(ls.getMaxX()).printChar('x').printInt(ls.getMaxY()).printNewline();
        this.rt().sleep(1, 0);
        fout.printChar('$').printInt(vs1.getMaxX()).printChar('x').printInt(vs1.getMaxY()).printNewline();
        int i = 60;
        while (i--) {
            this.rt().sleep(0, 250);
            fout.printInt(i).printNewline();
        }
        
        ls.drawFCharAt('#',fg,bg, 98,1);
        ls.drawFCharAt('#',fg,bg, 99,2);
        ls.drawFCharAt('#',fg,bg,100,3);
        ls.drawFCharAt('#',fg,bg,101,4);
        ls.drawFCharAt('#',fg,bg,102,5);
        ls.drawFCharAt('#',fg,bg,103,6);
        ls.drawFCharAt('#',fg,bg,104,7);
        ls.drawFCharAt('#',fg,bg,105,8);
        ls.drawFCharAt('#',fg,bg,106,9);
        ls.drawFCharAt('#',fg,bg,107,10);
        ls.drawFCharAt('#',fg,bg,108,11);
        ls.drawFCharAt('#',fg,bg,109,12);
        ls.drawFCharAt('#',fg,bg,110,13);
//        ls.drawFCharAt('#',fg,bg,0,0);
//        ls.drawFCharAt('#',fg,bg,ls.getMaxX()-1,ls.getMaxY()-1);
        
        // wait before termination which clears screen again
        this.rt().sleep(10, 0);
    }
}
