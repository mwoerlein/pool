/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace sys::core;

use sys::stream::IStream;
use sys::stream::OStream;

class ObjectTest extends test::TestCase {

    [] runAll() {
        this.testOwnership();
    }
    
    [int] testOwnership() {
        this.start("testOwnership");
        
        Object a = this.rt().createInstance(Object:CLASSNAME);
        Object b = this.rt().createInstance(Object:CLASSNAME);
        
        Object e = a.createOwn(Object:CLASSNAME);
        if (!a.equals(e.getOwner())) { return this.fail("Ownership after creation"); }
        Object f = a.createOwn(Object:CLASSNAME);
        if (!a.equals(f.getOwner())) { return this.fail("Ownership after creation"); }
        Object g = f.createOwn(Object:CLASSNAME);
        if (!f.equals(g.getOwner())) { return this.fail("Ownership after creation"); }
        
        b.own(e);
        if (!b.equals(e.getOwner())) { return this.fail("Ownership transfer"); }
        b.own(f);
        if (!b.equals(f.getOwner())) { return this.fail("Ownership transfer"); }
        
        a.destroy();
        b.destroy();
        return this.success();
    }
}
